입력 양식 전체를 감싸는 태그
form은 컨트롤 요소(control element)로 구성된다.

Form 태그의 속성
설명

method
전송 방식 선택- get : 256~4096 byte까지만 전송 가능- post : 입력 내용의 길이에 제한 X

name
form의 이름서버로 제출된 폼 데이터(form data)를 참조하기 위해 사용

action
form을 전송할 서버 쪽의 script 파일을 지정전송되는 서버 url 또는 html 링크

target
action에서 지정한 script 파일을 현재 창이 아닌 다른 위치에 열도록 지정

autocomplete
자동 완성. on으로 명시하면, 브라우저는 사용자가 이전에 입력했던 값들을 기반으로 사용자가 입력한 값과 비슷한 값들을 드롭다운 옵션으로 보여준다.

enctype
폼 데이터(form data)가 서버로 제출될 때 해당 데이터가 인코딩되는 방법을 명시- application/x-www-form-urlencoded 기본값으로, 모든 문자들은 서버로 보내기 전에 인코딩됨을 명시함. - multipart/form-data 모든 문자를 인코딩하지 않음을 명시함. 이 방식은 <form> 요소가 파일이나 이미지를 서버로 전송할 때 주로 사용함. - text/plain 공백 문자(space)는 "+" 기호로 변환하지만, 나머지 문자는 모두 인코딩되지 않음을 명시함.

novalidate
폼 데이터(form data)를 서버로 제출할 때 해당 데이터의 유효성을 검사하지 않음을 명시

<form name="profile" action="/action_page.php" method="get" autocomplete="on">
  <input type="text" name="id"> <!-- 입력란 -->
  <select> <!-- 드롭다운 메뉴 -->
    <option value="blue">red</option>
    <option value="blue">blue</option>
    <option value="blue">green</option>
  </select>
  <input type="submit" value="Submit"> <!-- 서버 제출 버튼 -->
</form>

제출(submit) 버튼을 클릭하면 input 태그에 입력된 값과 select, option 태그의 선택된 메뉴값이 
form 태그의 method 속성에 지정된 방식(get)으로 action 속성에 지정된 서버측의 처리 로직(/action_page.php)에 전달되게 된다. 
그러면 서버에선 name 속성으로 지정된 이름으로 변수값을 받아 데이터를 얻어 처리를 하는 것이다. 
(위의 예제는 서버 설정이 없으니 실제로 제출되지는 않는다)

이처럼 <form> 태그는 사용자의 상호작용할 입력란이나 메뉴, 버튼 태그들을 정의하고 
이를 묶고 어디에 어떻게 언제 제출할지 태그 속성으로 지정하는 것으로 보면 된다.
